#!/bin/bash

role=$1

ansible $role -s -m script -a './dirs.sh'
ansible $role -s -a 'apt-get update'
ansible $role -s -a 'apt install -y qemu-kvm vlan genisoimage libvirt-bin dnsmasq-utils sysstat sqlite3 keepalived'
ansible $role -m synchronize -a 'src=/opt/cloudland/scripts dest=/opt/cloudland/'
ansible $role -m synchronize -a 'src=/opt/cloudland/lib64 dest=/opt/cloudland/'
ansible $role -m synchronize -a 'src=/opt/cloudland/bin dest=/opt/cloudland/'
ansible $role -m copy -s -a 'src=/opt/sci dest=/opt'
ansible $role -m shell -s -a 'chmod +x /opt/sci/sbin/*; chmod +x /opt/sci/bin/*'
ansible $role -s -a 'chown -R ubuntu.ubuntu /opt/cloudland'
ansible $role -m copy -s -a 'src=/home/ubuntu/sci/scid/scid.service dest=/lib/systemd/system/'
ansible $role -s -a 'systemctl enable scid.service'
ansible $role -s -a 'systemctl start scid.service'
ansible $role -m copy -s -a 'src=./recover_router.service dest=/lib/systemd/system/'
ansible $role -s -a 'systemctl enable recover_router.service'
ansible $role -m copy -s -a 'src=./cloudlet@.service dest=/lib/systemd/system/'
ansible $role -m copy -s -a 'src=./cloudlet.env dest=/etc/default/cloudlet'
ansible $role -m script -s -a ./cloudlet_id.sh
ansible $role -m copy -s -a 'src=/usr/local/bin/ipcalc dest=/usr/local/bin/'
ansible $role -m shell -s -a 'chmod +x /usr/local/bin/ipcalc'
ansible $role -m copy -s -a 'src=/etc/hosts dest=/etc/'
ansible $role -m copy -s -a 'src=/etc/ld.so.conf.d/sci-x86_64.conf dest=/etc/ld.so.conf.d'
ansible $role -s -a 'ldconfig'
ansible $role -s -a 'usermod -a ubuntu -G netdev,sudo,libvirtd,adm'
#ansible $role -s -m script -a './qemu_tap.sh'
#ansible $role -s -a 'systemctl restart libvirt-bin'
ansible $role -s 'apt install -y lxd lxd-client'
ansible $role -s 'lxd init --auto'
ansible $role -s 'lxc profile create template'
