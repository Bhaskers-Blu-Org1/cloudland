// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkgs.proto

package pkgs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pkg struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Sha1Sum              string   `protobuf:"bytes,3,opt,name=sha1sum,proto3" json:"sha1sum,omitempty"`
	Deploy               bool     `protobuf:"varint,4,opt,name=deploy,proto3" json:"deploy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pkg) Reset()         { *m = Pkg{} }
func (m *Pkg) String() string { return proto.CompactTextString(m) }
func (*Pkg) ProtoMessage()    {}
func (*Pkg) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{0}
}

func (m *Pkg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pkg.Unmarshal(m, b)
}
func (m *Pkg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pkg.Marshal(b, m, deterministic)
}
func (m *Pkg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pkg.Merge(m, src)
}
func (m *Pkg) XXX_Size() int {
	return xxx_messageInfo_Pkg.Size(m)
}
func (m *Pkg) XXX_DiscardUnknown() {
	xxx_messageInfo_Pkg.DiscardUnknown(m)
}

var xxx_messageInfo_Pkg proto.InternalMessageInfo

func (m *Pkg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pkg) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Pkg) GetSha1Sum() string {
	if m != nil {
		return m.Sha1Sum
	}
	return ""
}

func (m *Pkg) GetDeploy() bool {
	if m != nil {
		return m.Deploy
	}
	return false
}

type Chunk struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Position             int64    `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{1}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Chunk) GetPosition() int64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type Setting struct {
	Github               string   `protobuf:"bytes,1,opt,name=github,proto3" json:"github,omitempty"`
	Login                string   `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Setting) Reset()         { *m = Setting{} }
func (m *Setting) String() string { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()    {}
func (*Setting) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{2}
}

func (m *Setting) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Setting.Unmarshal(m, b)
}
func (m *Setting) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Setting.Marshal(b, m, deterministic)
}
func (m *Setting) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Setting.Merge(m, src)
}
func (m *Setting) XXX_Size() int {
	return xxx_messageInfo_Setting.Size(m)
}
func (m *Setting) XXX_DiscardUnknown() {
	xxx_messageInfo_Setting.DiscardUnknown(m)
}

var xxx_messageInfo_Setting proto.InternalMessageInfo

func (m *Setting) GetGithub() string {
	if m != nil {
		return m.Github
	}
	return ""
}

func (m *Setting) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *Setting) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Project struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{3}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Project) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type BuildRequest struct {
	Project              *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildRequest) Reset()         { *m = BuildRequest{} }
func (m *BuildRequest) String() string { return proto.CompactTextString(m) }
func (*BuildRequest) ProtoMessage()    {}
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{4}
}

func (m *BuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRequest.Unmarshal(m, b)
}
func (m *BuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRequest.Marshal(b, m, deterministic)
}
func (m *BuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRequest.Merge(m, src)
}
func (m *BuildRequest) XXX_Size() int {
	return xxx_messageInfo_BuildRequest.Size(m)
}
func (m *BuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRequest proto.InternalMessageInfo

func (m *BuildRequest) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type BuildReply struct {
	Pkgs                 []*Pkg   `protobuf:"bytes,1,rep,name=pkgs,proto3" json:"pkgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildReply) Reset()         { *m = BuildReply{} }
func (m *BuildReply) String() string { return proto.CompactTextString(m) }
func (*BuildReply) ProtoMessage()    {}
func (*BuildReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{5}
}

func (m *BuildReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildReply.Unmarshal(m, b)
}
func (m *BuildReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildReply.Marshal(b, m, deterministic)
}
func (m *BuildReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildReply.Merge(m, src)
}
func (m *BuildReply) XXX_Size() int {
	return xxx_messageInfo_BuildReply.Size(m)
}
func (m *BuildReply) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildReply.DiscardUnknown(m)
}

var xxx_messageInfo_BuildReply proto.InternalMessageInfo

func (m *BuildReply) GetPkgs() []*Pkg {
	if m != nil {
		return m.Pkgs
	}
	return nil
}

type UploadReply struct {
	Pkg                  *Pkg     `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadReply) Reset()         { *m = UploadReply{} }
func (m *UploadReply) String() string { return proto.CompactTextString(m) }
func (*UploadReply) ProtoMessage()    {}
func (*UploadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{6}
}

func (m *UploadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadReply.Unmarshal(m, b)
}
func (m *UploadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadReply.Marshal(b, m, deterministic)
}
func (m *UploadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadReply.Merge(m, src)
}
func (m *UploadReply) XXX_Size() int {
	return xxx_messageInfo_UploadReply.Size(m)
}
func (m *UploadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadReply.DiscardUnknown(m)
}

var xxx_messageInfo_UploadReply proto.InternalMessageInfo

func (m *UploadReply) GetPkg() *Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type RemoveRequest struct {
	Pkg                  *Pkg     `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{7}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetPkg() *Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type RemoveReply struct {
	Pkg                  *Pkg     `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveReply) Reset()         { *m = RemoveReply{} }
func (m *RemoveReply) String() string { return proto.CompactTextString(m) }
func (*RemoveReply) ProtoMessage()    {}
func (*RemoveReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{8}
}

func (m *RemoveReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveReply.Unmarshal(m, b)
}
func (m *RemoveReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveReply.Marshal(b, m, deterministic)
}
func (m *RemoveReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveReply.Merge(m, src)
}
func (m *RemoveReply) XXX_Size() int {
	return xxx_messageInfo_RemoveReply.Size(m)
}
func (m *RemoveReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveReply.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveReply proto.InternalMessageInfo

func (m *RemoveReply) GetPkg() *Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type ListRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{9}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DownloadRequest struct {
	Pkg                  *Pkg     `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{10}
}

func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (m *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(m, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

func (m *DownloadRequest) GetPkg() *Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

type PkgChunk struct {
	Pkg                  *Pkg     `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	Chunk                *Chunk   `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PkgChunk) Reset()         { *m = PkgChunk{} }
func (m *PkgChunk) String() string { return proto.CompactTextString(m) }
func (*PkgChunk) ProtoMessage()    {}
func (*PkgChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_21a791bdd2cceefd, []int{11}
}

func (m *PkgChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PkgChunk.Unmarshal(m, b)
}
func (m *PkgChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PkgChunk.Marshal(b, m, deterministic)
}
func (m *PkgChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PkgChunk.Merge(m, src)
}
func (m *PkgChunk) XXX_Size() int {
	return xxx_messageInfo_PkgChunk.Size(m)
}
func (m *PkgChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_PkgChunk.DiscardUnknown(m)
}

var xxx_messageInfo_PkgChunk proto.InternalMessageInfo

func (m *PkgChunk) GetPkg() *Pkg {
	if m != nil {
		return m.Pkg
	}
	return nil
}

func (m *PkgChunk) GetChunk() *Chunk {
	if m != nil {
		return m.Chunk
	}
	return nil
}

func init() {
	proto.RegisterType((*Pkg)(nil), "com.github.gabecloud.sca.pkgs.Pkg")
	proto.RegisterType((*Chunk)(nil), "com.github.gabecloud.sca.pkgs.Chunk")
	proto.RegisterType((*Setting)(nil), "com.github.gabecloud.sca.pkgs.Setting")
	proto.RegisterType((*Project)(nil), "com.github.gabecloud.sca.pkgs.Project")
	proto.RegisterType((*BuildRequest)(nil), "com.github.gabecloud.sca.pkgs.BuildRequest")
	proto.RegisterType((*BuildReply)(nil), "com.github.gabecloud.sca.pkgs.BuildReply")
	proto.RegisterType((*UploadReply)(nil), "com.github.gabecloud.sca.pkgs.UploadReply")
	proto.RegisterType((*RemoveRequest)(nil), "com.github.gabecloud.sca.pkgs.RemoveRequest")
	proto.RegisterType((*RemoveReply)(nil), "com.github.gabecloud.sca.pkgs.RemoveReply")
	proto.RegisterType((*ListRequest)(nil), "com.github.gabecloud.sca.pkgs.ListRequest")
	proto.RegisterType((*DownloadRequest)(nil), "com.github.gabecloud.sca.pkgs.DownloadRequest")
	proto.RegisterType((*PkgChunk)(nil), "com.github.gabecloud.sca.pkgs.PkgChunk")
}

func init() { proto.RegisterFile("pkgs.proto", fileDescriptor_21a791bdd2cceefd) }

var fileDescriptor_21a791bdd2cceefd = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x25, 0xa6, 0x5f, 0xde, 0xac, 0x08, 0x17, 0x91, 0x10, 0x58, 0x5c, 0x07, 0xd1, 0xfa, 0x41,
	0xba, 0x56, 0x71, 0xc1, 0x27, 0xdd, 0xae, 0xf8, 0xa2, 0x50, 0x22, 0x82, 0xf8, 0xb2, 0xa4, 0xc9,
	0x30, 0x8d, 0xf9, 0x98, 0xd8, 0x99, 0xac, 0x2c, 0xf8, 0xa7, 0xfd, 0x07, 0x32, 0x1f, 0x59, 0xaa,
	0x88, 0x53, 0xeb, 0x5b, 0x6e, 0x72, 0xee, 0x39, 0xe7, 0xce, 0xb9, 0x13, 0x80, 0xb6, 0x64, 0x22,
	0x6e, 0x37, 0x5c, 0x72, 0x3c, 0xcc, 0x78, 0x1d, 0xb3, 0x42, 0xae, 0xbb, 0x55, 0xcc, 0xd2, 0x15,
	0xcd, 0x2a, 0xde, 0xe5, 0xb1, 0xc8, 0xd2, 0x58, 0x81, 0x08, 0x05, 0x7f, 0x59, 0x32, 0x44, 0x18,
	0x34, 0x69, 0x4d, 0x43, 0xef, 0xc8, 0x9b, 0x5e, 0x4f, 0xf4, 0x33, 0x86, 0x30, 0xbe, 0xa0, 0x1b,
	0x51, 0xf0, 0x26, 0xbc, 0xa6, 0x5f, 0xf7, 0xa5, 0xfa, 0x22, 0xd6, 0xe9, 0x53, 0xd1, 0xd5, 0xa1,
	0x6f, 0xbe, 0xd8, 0x12, 0x6f, 0xc3, 0x28, 0xa7, 0x6d, 0xc5, 0x2f, 0xc3, 0xc1, 0x91, 0x37, 0x9d,
	0x24, 0xb6, 0x22, 0x27, 0x30, 0x5c, 0xac, 0xbb, 0xa6, 0x54, 0x42, 0x79, 0x2a, 0x53, 0x2d, 0x74,
	0x90, 0xe8, 0x67, 0x8c, 0x60, 0xd2, 0x72, 0x51, 0xc8, 0x5e, 0xc9, 0x4f, 0xae, 0x6a, 0xf2, 0x1e,
	0xc6, 0x1f, 0xa8, 0x94, 0x45, 0xc3, 0x14, 0xb7, 0x99, 0xc3, 0xba, 0xb4, 0x15, 0xde, 0x82, 0x61,
	0xc5, 0x59, 0xd1, 0xbb, 0x34, 0x85, 0x7a, 0x2b, 0x79, 0x49, 0x1b, 0xeb, 0xd0, 0x14, 0xe4, 0x04,
	0xc6, 0xcb, 0x0d, 0xff, 0x42, 0x33, 0xf9, 0x6f, 0x23, 0x93, 0x25, 0x1c, 0x9c, 0x76, 0x45, 0x95,
	0x27, 0xf4, 0x6b, 0x47, 0x85, 0xc4, 0x57, 0x30, 0x6e, 0x0d, 0x91, 0x26, 0x08, 0xe6, 0xf7, 0xe3,
	0xbf, 0x1e, 0x74, 0x6c, 0x65, 0x93, 0xbe, 0x8d, 0x9c, 0x01, 0x58, 0xc6, 0xb6, 0xba, 0xc4, 0x17,
	0x30, 0x50, 0xb0, 0xd0, 0x3b, 0xf2, 0xa7, 0xc1, 0x9c, 0xb8, 0xc8, 0x4a, 0x96, 0x68, 0x3c, 0x59,
	0x40, 0xf0, 0xb1, 0xad, 0x78, 0x6a, 0x69, 0x9e, 0x83, 0xdf, 0x96, 0xcc, 0x5a, 0xda, 0x85, 0x45,
	0xc1, 0xc9, 0x1b, 0xb8, 0x91, 0xd0, 0x9a, 0x5f, 0xd0, 0x7e, 0xba, 0xfd, 0x68, 0x16, 0x10, 0xf4,
	0x34, 0xfb, 0x7b, 0xb9, 0x0b, 0xc1, 0xbb, 0x42, 0xc8, 0xde, 0xc9, 0x1f, 0x52, 0x22, 0x6f, 0xe1,
	0xe6, 0x19, 0xff, 0xd6, 0x98, 0xa9, 0xff, 0xc7, 0xf0, 0x77, 0x98, 0x2c, 0x4b, 0x66, 0x16, 0x73,
	0x2f, 0x06, 0x7c, 0x09, 0xc3, 0x4c, 0xb5, 0xeb, 0x75, 0x09, 0xe6, 0xf7, 0x1c, 0x7d, 0x5a, 0x2a,
	0x31, 0x2d, 0xf3, 0x1f, 0xbe, 0x96, 0x7f, 0x9d, 0xd7, 0x45, 0x83, 0xe7, 0x30, 0x32, 0x39, 0xe2,
	0x03, 0xb7, 0xb6, 0xa6, 0x89, 0x1e, 0x39, 0x80, 0x5b, 0x7b, 0x31, 0xf5, 0x70, 0x05, 0x23, 0x13,
	0x0e, 0x3e, 0x71, 0xf4, 0xfd, 0xb2, 0x0a, 0x4e, 0x95, 0xed, 0xc4, 0x3f, 0xc1, 0x40, 0x65, 0x87,
	0xae, 0x9e, 0xad, 0x80, 0xa3, 0x1d, 0x8e, 0xfa, 0xd8, 0xc3, 0x73, 0x18, 0xea, 0xcb, 0x82, 0x8f,
	0x1d, 0xf0, 0xed, 0x4b, 0x1a, 0x3d, 0xdc, 0x0d, 0xac, 0xac, 0x53, 0x98, 0xf4, 0x3b, 0x85, 0xb1,
	0xa3, 0xed, 0xb7, 0xe5, 0x8b, 0x76, 0x4d, 0xec, 0xd8, 0x3b, 0xbd, 0xf3, 0xf9, 0xd0, 0xe2, 0x32,
	0x5e, 0xcf, 0xae, 0xb0, 0x33, 0x91, 0xa5, 0x33, 0x85, 0x5d, 0x8d, 0xf4, 0x5f, 0xfb, 0xd9, 0xcf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x49, 0x9a, 0x6f, 0xc3, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PkgAdminClient is the client API for PkgAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PkgAdminClient interface {
	Upload(ctx context.Context, opts ...grpc.CallOption) (PkgAdmin_UploadClient, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (PkgAdmin_ListClient, error)
	Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildReply, error)
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (PkgAdmin_DownloadClient, error)
}

type pkgAdminClient struct {
	cc *grpc.ClientConn
}

func NewPkgAdminClient(cc *grpc.ClientConn) PkgAdminClient {
	return &pkgAdminClient{cc}
}

func (c *pkgAdminClient) Upload(ctx context.Context, opts ...grpc.CallOption) (PkgAdmin_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PkgAdmin_serviceDesc.Streams[0], "/com.github.gabecloud.sca.pkgs.PkgAdmin/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &pkgAdminUploadClient{stream}
	return x, nil
}

type PkgAdmin_UploadClient interface {
	Send(*PkgChunk) error
	CloseAndRecv() (*UploadReply, error)
	grpc.ClientStream
}

type pkgAdminUploadClient struct {
	grpc.ClientStream
}

func (x *pkgAdminUploadClient) Send(m *PkgChunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pkgAdminUploadClient) CloseAndRecv() (*UploadReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pkgAdminClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveReply, error) {
	out := new(RemoveReply)
	err := c.cc.Invoke(ctx, "/com.github.gabecloud.sca.pkgs.PkgAdmin/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pkgAdminClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (PkgAdmin_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PkgAdmin_serviceDesc.Streams[1], "/com.github.gabecloud.sca.pkgs.PkgAdmin/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &pkgAdminListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PkgAdmin_ListClient interface {
	Recv() (*Pkg, error)
	grpc.ClientStream
}

type pkgAdminListClient struct {
	grpc.ClientStream
}

func (x *pkgAdminListClient) Recv() (*Pkg, error) {
	m := new(Pkg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pkgAdminClient) Build(ctx context.Context, in *BuildRequest, opts ...grpc.CallOption) (*BuildReply, error) {
	out := new(BuildReply)
	err := c.cc.Invoke(ctx, "/com.github.gabecloud.sca.pkgs.PkgAdmin/Build", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pkgAdminClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (PkgAdmin_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PkgAdmin_serviceDesc.Streams[2], "/com.github.gabecloud.sca.pkgs.PkgAdmin/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &pkgAdminDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PkgAdmin_DownloadClient interface {
	Recv() (*PkgChunk, error)
	grpc.ClientStream
}

type pkgAdminDownloadClient struct {
	grpc.ClientStream
}

func (x *pkgAdminDownloadClient) Recv() (*PkgChunk, error) {
	m := new(PkgChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PkgAdminServer is the server API for PkgAdmin service.
type PkgAdminServer interface {
	Upload(PkgAdmin_UploadServer) error
	Remove(context.Context, *RemoveRequest) (*RemoveReply, error)
	List(*ListRequest, PkgAdmin_ListServer) error
	Build(context.Context, *BuildRequest) (*BuildReply, error)
	Download(*DownloadRequest, PkgAdmin_DownloadServer) error
}

// UnimplementedPkgAdminServer can be embedded to have forward compatible implementations.
type UnimplementedPkgAdminServer struct {
}

func (*UnimplementedPkgAdminServer) Upload(srv PkgAdmin_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedPkgAdminServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedPkgAdminServer) List(req *ListRequest, srv PkgAdmin_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedPkgAdminServer) Build(ctx context.Context, req *BuildRequest) (*BuildReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Build not implemented")
}
func (*UnimplementedPkgAdminServer) Download(req *DownloadRequest, srv PkgAdmin_DownloadServer) error {
	return status.Errorf(codes.Unimplemented, "method Download not implemented")
}

func RegisterPkgAdminServer(s *grpc.Server, srv PkgAdminServer) {
	s.RegisterService(&_PkgAdmin_serviceDesc, srv)
}

func _PkgAdmin_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PkgAdminServer).Upload(&pkgAdminUploadServer{stream})
}

type PkgAdmin_UploadServer interface {
	SendAndClose(*UploadReply) error
	Recv() (*PkgChunk, error)
	grpc.ServerStream
}

type pkgAdminUploadServer struct {
	grpc.ServerStream
}

func (x *pkgAdminUploadServer) SendAndClose(m *UploadReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pkgAdminUploadServer) Recv() (*PkgChunk, error) {
	m := new(PkgChunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PkgAdmin_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PkgAdminServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.gabecloud.sca.pkgs.PkgAdmin/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PkgAdminServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PkgAdmin_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PkgAdminServer).List(m, &pkgAdminListServer{stream})
}

type PkgAdmin_ListServer interface {
	Send(*Pkg) error
	grpc.ServerStream
}

type pkgAdminListServer struct {
	grpc.ServerStream
}

func (x *pkgAdminListServer) Send(m *Pkg) error {
	return x.ServerStream.SendMsg(m)
}

func _PkgAdmin_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PkgAdminServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.github.gabecloud.sca.pkgs.PkgAdmin/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PkgAdminServer).Build(ctx, req.(*BuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PkgAdmin_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PkgAdminServer).Download(m, &pkgAdminDownloadServer{stream})
}

type PkgAdmin_DownloadServer interface {
	Send(*PkgChunk) error
	grpc.ServerStream
}

type pkgAdminDownloadServer struct {
	grpc.ServerStream
}

func (x *pkgAdminDownloadServer) Send(m *PkgChunk) error {
	return x.ServerStream.SendMsg(m)
}

var _PkgAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.github.gabecloud.sca.pkgs.PkgAdmin",
	HandlerType: (*PkgAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Remove",
			Handler:    _PkgAdmin_Remove_Handler,
		},
		{
			MethodName: "Build",
			Handler:    _PkgAdmin_Build_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _PkgAdmin_Upload_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "List",
			Handler:       _PkgAdmin_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _PkgAdmin_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkgs.proto",
}
